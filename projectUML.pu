@startuml projectUML

title Tank Game UML Diagram

enum orient as "orientation" {
    U = 0 
    UR = 1
    R = 2
    DR = 3
    D = 4 
    DL = 5
    L = 6
    UL = 7
}

enum objT as "objType" {
    W = 0 
    B = 1 
    M = 2
    P1T = 3
    P2T = 4
}

enum mv as "move" {
    moveForward = 1
    moveBackwards = 2
    rotateQuarterLeft = 3
    rotateEighthLeft = 4
    noAction = 5
    rotateEighthRight = 6
    rotateQuarterRight = 7
    shoot = 8
}

class matObj as "matrixObject" {
    - location: int[2]
    - hitsLeft: int
    - type: objType
    + getLocation(): const int*
    + setLocation(row: int, col: int): void
    + getIsAlive(): bool
    + takeAHit(): void
    + getType(): objType
}

class movObj as "movingObject" {
    # orient: orientation
    # oldLocation: int[2]
    + newLocation(): int *
    + getOldLocation(): const int*
    + setNewLocation(row: int, col: int): void
    + getOrient(): orientation
}

class unmovObj as "unmovingObject" {
}

class t as "tank" {
    - shotsLeft: int
    - inBackwards: int
    - turnsUntilNextShot: int
    - calcMoveRound: int
    + play(): objMove
    + canShoot(): bool
    + isSafe(): bool
}

class b as "bullet" {
}

class m as "mine" {
}

class w as "wall" {
    - hitsLeft = 2
}

class p1T as "p1Tank" {
    playCalc(gameBoard: gameMatrix&, tank2Loc: int[2], numOfRows: int, numOfCols: int): vector<objMove>
    handleSurrounded(gameBoard: gameMatrix&, tank2Loc: int[2]): vector<objMove>
    checkIfOnSameLine(otherLoc: int[2]): bool
}

class p2T as "p2Tank" {
    searchForBullets(gameBoard: gameMatrix&, inRows: int, inCols: int): array<int, 4>
}

class gm as "gameManager" {
    - gameMapFileName: string
    - numOfRows: int
    - numOfCols: int
    - turns: int
    - noBulletsCnt: int
    - gameBoard: gameMatrix

    - makeAllMoves(): void
    - canMakeMove(tankChoseTheMove: tank&, move: ): bool
    - makeTankMoves(): void
    - moveBullets(): void
    - checkCollisions(): bool
    + playGame(): void
}

class p1T

matObj <|-- movObj
matObj <|-- unmovObj
movObj <|-- t
movObj <|-- b
unmovObj <|-- m
unmovObj <|-- w
t <|-- p1T
t <|-- p2T
movObj "1" *-- "1" orient
matObj "1" *-- "1" objT
t "1" *-- "0.." mv

note left of gm: We will denote vector<vector<array<matrixObject *, 3>>> \nas gameMatrix for simplicity.
note right of objT: W = Wall \nB = Bullet \nM = Mine \nP1T = Player 1 Tank \nP2T = Player 2 Tank
note right of orient: U = Up \nUR = Up Right \nR = Right \nDR = Down Right \nD = Down \nDL = Down Left \nL = Left \nUL = Up Left

legend top right
    <b>Legend</b>
    <color:green>Green</color> - Class
    <color:red>Red</color> - Enum
    square - Public
    diamond - Protected
    circle - Private
endlegend

@enduml